(ns sicp-practice.ex-1-10)

;; 問題1.10
(defn A [x y]
  (cond (= y 0) 0
	(= x 0) (* 2 y)
	(= y 1) 2
	:else (A (- x 1)
		 (A x (- y 1)))))

(A 1 10) ; 1024
(A 2 4) ; 65536
(A 3 3) ; 65536

;; 以下のf、g、hの簡潔的な数学的定義を述べよ

;; condの2つ目のケースにすぐ行くので2*nと分かる
(defn f [n] (A 0 n))
(map f (range 10)) ; (0 2 4 6 8 10 12 14 16 18)

;; (A 1 n) => (A 0 (A 1 (- n 1))) => (* 2 (A 1 (- n 1)))
;; => (* 2 (A 0 (A 1 (- n 2)))) => (* 2 (* 2 (A 1 (- n 2)))) => ...
;; 2^n
(defn g [n] (A 1 n))
(map g (range 10)) ; (0 2 4 8 16 32 64 128 256 512)

;; 2^2^...^2
;; (A 2 n) => (A 1 (A 1 (- n 1)) => (2^(A 1 (- n 1)) => (2^(2^{n-1}) => 2^n
(defn h [n] (A 2 n))
(map h (range 5)) ; (0 2 4 16 65536)
;; サボっているので、hに大きい値を入れると死にます...